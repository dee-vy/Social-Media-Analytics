library(LSAfun)
library(LSAfun)
setwd("/Users/deekshavyas/Documents/Dissertation/sem2/CodeTesting/json_to_csv/active_ageing_docs")
install.packages("lsa")
install.packages("lsa")
(
library("lsa")
)
library("lsa")
z = textmatrix("./")
setwd("/Users/deekshavyas/Documents/Dissertation/sem2/CodeTesting/json_to_csv/All_combined_Irish_docs")
z = textmatrix("./")
l = lsa(z)
neighbors("activeageing",n=20,tvectors = l$tk)
plot_neighbors("activeageing",n=20,tvectors = l$tk)
help(coherence)
help(genericSummary)
help("Predication")
l
help()lsa
help(lsa)
z
help("textmatrix")
textmatrix("./", minDocFreq = 0)
getOption("max.print")
setOption("max.print", 100000)
help("getOption")
options(max.print=1000000)
textmatrix("./", minDocFreq = 0)
z
z$legend
z[, 0]
z[, 1]
z[1, 1]
z[1, 0]
z[1, 2]
z[4, 2]
z[, 2]
z[, 100000]
z[, 10000]
z[, 1000]
z[, 1366]
z[, 1367]
z[, 1370]
z[, 1368]
l
281*8
l$tk
z
l
l$tk
l$tk[0]
l$tk[1]
l$tk[,1]
l$tk
options(max.print=10)
l$tk
options(max.print=100)
l$tk
options(max.print=1000)
l$tk
l$dk
l$sk
help(lsa)
z
setwd("/Users/deekshavyas/Documents/Dissertation/sem2/CodeTesting/json_to_csv/All_combined_Irish_docs")
z = textmatrix("./")
l = lsa(z)
plot_neighbors("activeageing",n=20,tvectors = l$tk)
z = textmatrix("./")
setwd("/Users/deekshavyas/Documents/Dissertation/sem2/CodeTesting/json_to_csv/All_combined_Irish_docs")
z = textmatrix("./")
z = textmatrix("./")
l = lsa(z)
l = lsa(z)
plot_neighbors("activeageing",n=20,tvectors = l$tk)
plot_neighbors("active ageing",n=20,tvectors = l$tk)
plot_neighbors("active ageing",n=20,tvectors = l$tk)
plot_neighbors("technology",n=20,tvectors = l$tk)
plot_neighbors("activity",n=20,tvectors = l$tk)
plot_neighbors("elderly",n=20,tvectors = l$tk)
z = textmatrix("./")
z = textmatrix("./")
l = lsa(z)
plot_neighbors("elderly",n=20,tvectors = l$tk)
plot_neighbors("elderly",n=20,tvectors = l$tk)
plot_neighbors("active ageing",n=20,tvectors = l$tk)
setwd("/Users/deekshavyas/Documents/Dissertation/sem2/CodeTesting/json_to_csv/All_combined_Irish_docs")
z = textmatrix("./")
l = lsa(z)
plot_neighbors("active ageing",n=20,tvectors = l$tk)
library(Sentiment_Analysis)
library(SentimentAnalysis)
l = lsa(z, 2)
l
l$tk
typeof(l$tk)
l$tk[0]
l$tk[1]
l$tk[:,1]
l$tk[:,1]
l$tk[,1]
order(l$tk[,1])
l$tk[order(l$tk[,1]),]
setwd("/Users/deekshavyas/Documents/Dissertation/sem2/CodeTesting/json_to_csv/All_combined_Irish_stopwords_removed_docs")
z = textmatrix("./")
z = textmatrix("./")
l = lsa(z, 2)
l$tk[order(l$tk[,1]),]
l$tk[order(abs(l$tk[,1])),]
help(order)
l$tk[order(abs(l$tk[,1]), decreasing = TRUE),]
l$tk[order(abs(l$tk[,2]), decreasing = TRUE),]
l$sk
l$dk
l$dk[order(abs(l$dk[,2]), decreasing = TRUE),]
help("textmatrix")
z = textmatrix("./", maxGlobFreq = 100)
l = lsa(z, 2)
l$tk[order(abs(l$tk[,2]), decreasing = TRUE),]
l$tk[order(abs(l$tk[,1]), decreasing = TRUE),]
l$sk[order(abs(l$sk[,1]), decreasing = TRUE),]
l$dk[order(abs(l$dk[,1]), decreasing = TRUE),]
z = textmatrix("./", maxGlobFreq = 100, stopwords = c("us"))
l = lsa(z, 2)
l$tk[order(abs(l$tk[,1]), decreasing = TRUE),]
l$dk[order(abs(l$dk[,1]), decreasing = TRUE),]
write.table(l$tk,file="tokenFile.txt",row.names=FALSE)
write.table(l$tk,file="tokenFile.txt")
help("write.table")
write.table(l$tk,file="tokenFile.txt", sep = ",")
plot_neighbors("ageing",n=20,tvectors = l$tk)
plot_neighbors("age",n=20,tvectors = l$tk)
neighbors("age",n=20,tvectors = l$tk)
help("neighbors")
neighbors("age",n=20,tvectors = l$tk*l$sk*l$dk)
neighbors("age",n=20,tvectors = l$tk\*l$sk\*l$dk)
l$tk %*% l$sk
l$tk %*% diag(l$sk)
l$tk %*% diag(l$sk) %*% t(l$dk)
A = l$tk %*% diag(l$sk) %*% t(l$dk)
neighbors("age",n=20,tvectors = A)
plot_neighbors("age",n=20,tvectors = A)
plot_neighbors("learning",n=20,tvectors = A)
setwd("/Users/deekshavyas/Documents/Dissertation/sem2/CodeTesting/json_to_csv/all_combined_actRetireIRL_noStopW_docs")
z = textmatrix("./")
l = lsa(z)
l = lsa(z, dims = 2)
l$tk
l$tk[order(abs(l$tk[,1]), decreasing = TRUE),]
l$tk[order(abs(l$tk[,2]), decreasing = TRUE),]
plot_neighbors("ageing",n=20,tvectors = A)
plot_neighbors("active",n=20,tvectors = A)
plot_neighbors("active",n=20,tvectors = l$tk)
plot_neighbors("political",n=20,tvectors = l$tk)
plot_neighbors("political",n=20,tvectors=l$tk)
plot_neighbors("political",n=20,tvectors=l$tk)
plot_neighbors("political",n=100,tvectors=l$tk)
plot_neighbors("political",n=10,tvectors=l$tk)
l$dk[order(abs(l$dk[,1]), decreasing = TRUE),]
plot_neighbors("active",n=20,tvectors = l$tk)
help("textmatrix")
plot_neighbors("active",n=20,tvectors = l$tk)
plot_neighbors("political",n=10,tvectors=l$tk)
l = lsa(z, 5)
write.table(l$tk,file="tokenFile.txt", sep = ",")
setwd("/Users/deekshavyas/Documents/Dissertation/sem2/CodeTesting/json_to_csv/All_combined_Irish_stopwords_removed_docs")
z = textmatrix("./", maxGlobFreq = 100)
l = lsa(z, 5)
write.table(l$tk,file="../Matrix_Data/tokenFile2.txt", sep = ",")
@TheChilwellEra @_Hazpilicueta This aged well
WeightFunction(lw_tf,"trial weights","w")
D <- read.csv("../Matrix_Data/token_file_5_topics.csv",header=TRUE,stringsAsFactors=TRUE)
summary(D)
with(D,shapiro.test(V1))
with(D,tapply(V1,list(word_type,emotion),mean))
with(D,tapply(V2,list(word_type,emotion),mean))
with(D,tapply(V3,list(word_type,emotion),mean))
with(D,tapply(V4,list(word_type,emotion),mean))
with(D,tapply(V5,list(word_type,emotion),mean))
with(D,interaction.plot(word_type,emotion,V1))
with(D,interaction.plot(word_type,emotion,V2))
with(D,interaction.plot(word_type,emotion,V3))
with(D,interaction.plot(word_type,emotion,V4))
with(D,interaction.plot(word_type,emotion,V5))
with(D,interaction.plot(word_type,emotion,V4))
plot_neighbors("active",n=20,tvectors = l$tk)
plot_neighbors("elderly",n=20,tvectors = l$tk)
plot_neighbors("age",n=20,tvectors = A)
neighbors("age",n=20,tvectors = l$tk*l$sk*l$dk)
neighbors("age",n=20,tvectors = l$tk\*l$sk\*l$dk)
plot_neighbors("elderly",n=20,tvectors = l$tk)
plot_neighbors("elderly",n=100,tvectors = l$tk)
q = lsa(z, 5)
plot_neighbors("elderly",n=20,tvectors = q$tk)
plot_neighbors("elderly",n=20,tvectors = q$tk)
plot_neighbors("elderly",n=20,tvectors = q$tk, dims = 3)
plot_neighbors("elderly",n=20,tvectors = q$tk, dims = 3)
plot_neighbors("elderly",n=20,tvectors = q$tk, dims = 3)
z = textmatrix("./")
q = lsa(z)
plot_neighbors("elderly",n=20,tvectors = q$tk)
summary(q)
summary(z)
summary(l)
summary(l$tk)
summary(l$sk)
library(tidyverse)
install.packages("tidyverse")
library(cluster)
install.packages("apcluster")
library(apcluster)
# for cluster visualisation
library(factoextra)
apcluster(q$tk,"./")
apcluster(z,"./")
summary(z)
summary(D)
plot_neighbors("elderly",n=20,tvectors = q$tk)
plot_neighbors("elderly",n=20,tvectors = l$tk)
plot_neighbors("elder",n=20,tvectors = q$tk)
plot_neighbors("older",n=20,tvectors = q$tk)
plot_neighbors("technology",n=20,tvectors = q$tk)
plot_neighbors("tech",n=20,tvectors = q$tk)
plot_neighbors("ageing",n=20,tvectors = q$tk)
plot_neighbors("active",n=20,tvectors = q$tk)
plot_neighbors("retirement",n=20,tvectors = q$tk)
with(D,interaction.plot(word_type,emotion,V1))
with(D,interaction.plot(emotion,word_type,V1))
with(D,interaction.plot(V1,emotion,word_type))
with(D,interaction.plot(word_type,emotion,V1))
with(D,interaction.plot(word_type,emotion,V5))
with(D,interaction.plot(word_type,emotion,V1))
with(D,interaction.plot(word_type,emotion,V4))
with(D,interaction.plot(word_type,emotion,V4))
temp<-read.csv(file="../Matrix_Data/token_file_5_topics.csv", sep=" ", colClasses=c("V4", "emotion"))
temp<-read.csv(file="../Matrix_Data/token_file_5_topics.csv", sep=" ", colClasses=c("word",V4", "emotion"))
temp<-read.csv(file="../Matrix_Data/token_file_5_topics.csv", sep=" ", colClasses=c("word",V4", "emotion")))
temp<-read.csv("../Matrix_Data/token_file_5_topics.csv", sep=" ", colClasses=c("word",V4", "emotion")))
temp<-read.csv("../Matrix_Data/token_file_5_topics.csv", sep=" ", colClasses=c("","string","","","","numeric","", "string","")))
temp<-read.csv("../Matrix_Data/token_file_5_topics.csv", sep=" ", colClasses=c("","string","","","","numeric","", "string",""))
temp<-read.csv("../Matrix_Data/token_file_5_topics.csv", sep=" ", colClasses=c("","string","","","","numeric","", "string",""))
temp<-read.csv("../Matrix_Data/token_file_5_topics.csv", sep=",", colClasses=c("","string","","","","numeric","", "string",""))
temp<-read.csv("../Matrix_Data/token_file_5_topics.csv", sep=",", colClasses=c("Null","string",Null,Null,Null,"numeric",Null, "string",Null))
temp<-read.csv("../Matrix_Data/token_file_5_topics.csv", sep=",", colClasses=c(Null,"string",Null,Null,Null,"numeric",Null, "string",Null))
temp<-read.csv("../Matrix_Data/token_file_5_topics.csv", sep=",", colClasses=c("Null","string","Null","Null","Null","numeric","Null", "string","Null"))
temp<-read.csv("../Matrix_Data/token_file_5_topics.csv", sep=",", colClasses=c("Null","character","Null","Null","Null","numeric","Null", "character","Null"))
temp<-read.csv("../Matrix_Data/token_file_5_topics.csv", sep=",", colClasses=c("Null","character","Null","Null","Null","numeric","Null", "character","Null"),
+            header = TRUE)
temp<-read.csv("../Matrix_Data/token_file_5_topics.csv", sep=",", colClasses=c("Null","character","Null","Null","Null","numeric","Null", "character","Null"), header = TRUE)
temp<-read.csv("../Matrix_Data/token_file_5_topics.csv", sep=",", colClasses=c("character","Null","Null","Null","numeric","Null", "character","Null"), header = TRUE)
library(data.table)
temp <- fread("../Matrix_Data/token_file_5_topics.csv", select = c("word","V4","emotion"))
temp
with(D,interaction.plot(word_type,emotion,V4))
with(D,interaction.plot(word_type,emotion,V1))
with(D,interaction.plot(word_type,emotion,V2))
with(D,interaction.plot(word_type,emotion,V3))
with(D,interaction.plot(word_type,emotion,V4))
with(D,interaction.plot(word_type,emotion,V5))
plot_neighbors("limerick",n=20,tvectors = l$tk)
plot_neighbors("limerick",n=20,tvectors = q$tk)
plot_neighbors("limerick",n=20,tvectors = q$tk)
plot_neighbors("learning",n=20,tvectors = q$tk)
plot_neighbors("learning",n=20,tvectors = q$tk)
plot_neighbors("new",n=20,tvectors = q$tk)
plot_neighbors("lifelong",n=20,tvectors = q$tk)
plot_neighbors("limerick",n=20,tvectors = l$tk)
plot_neighbors("elder",n=20,tvectors = l$tk)
plot_neighbors("elder",n=20,tvectors = q$tk)
plot_neighbors("elderly",n=20,tvectors = q$tk)
summary(q)
q$tk
l$tk
l$tk
l$dk
l$sk
neighbors("elderly",n=10,tvectors = q$tk)
neighbors("elderly",n=10,tvectors = l$tk)
with(D, kruskal.test(V1~emotion))
